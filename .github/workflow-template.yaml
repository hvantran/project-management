name: {{SERVICE_NAME}} service ci

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: [ "main" ]
    paths:
      - "{{SERVICE_NAME}}/**"
      - "base-platform/**"
      - ".github/workflows/actions/action.yaml"
      - ".github/workflows/{{SERVICE_NAME}}-ci.yaml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "{{SERVICE_NAME}}/**"
      - "base-platform/**"
      - ".github/workflows/actions/action.yaml"
      - ".github/workflows/{{SERVICE_NAME}}-ci.yaml"
      
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/workflows/actions
      - name: Run maven build
        run: |
          mvn clean install -DskipTests -f parent-pom &&
          mvn clean install -DskipTests -f base-platform &&
          mvn clean install -DskipTests -f {{SERVICE_NAME}}
      - name: Analyze with sonar cloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar -Dsonar.projectKey=hvantran_parent-pom -f parent-pom;
          mvn sonar:sonar -Dsonar.projectKey=hvantran_base-platform -f base-platform;
          mvn sonar:sonar -Dsonar.projectKey=hvantran_{{SERVICE_NAME}} -f {{SERVICE_NAME}}

  Unit-Tests:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/workflows/actions
      - name: Run maven test
        run: mvn test -Dmaven.test.failure.ignore=true -f {{SERVICE_NAME}}
      - name: Unit test results
        uses: dorny/test-reporter@v1
        with:
          name: Unit-Test-Results
          path: "{{SERVICE_NAME}}/**/surefire-reports/*.xml"
          reporter: java-junit
          fail-on-error: true
  Deploy:
    needs: Unit-Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/workflows/actions
      - name: Run maven package
        run: mvn clean package -DskipTests -f {{SERVICE_NAME}}
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          context: ./{{SERVICE_NAME}}
          push: true
          tags: ghcr.io/hvantran/{{SERVICE_NAME}}:latest