name: template-manager-backend service ci

env:
  CI: false

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/actions/action.yaml"
      - ".github/workflows/template-manager-backend-ci.yaml"
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/actions/action.yaml"
      - ".github/workflows/template-manager-backend-ci.yaml"
      
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/workflows/actions
      - name: Run maven build
        run: |
          mvn clean install -f parent-pom &&
          mvn clean -f base-platform dependency:tree &&
          mvn clean install -Ddockerfile.skip=true -DskipTests -P prod -f base-platform &&
          mvn clean -f services/template-management-app/template-manager-backend dependency:tree &&
          mvn clean install -Ddockerfile.skip=true -DskipTests -P prod -f services/template-management-app/template-manager-backend

  Test:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/workflows/actions
      - name: Run maven test
        run: |
          mvn clean install -f parent-pom && 
          mvn clean install -Ddockerfile.skip=true -DskipTests -P prod -f base-platform &&
          mvn clean install -Dmaven.test.failure.ignore=true -P test -f services/template-management-app/template-manager-backend
      - name: Unit test results
        uses: dorny/test-reporter@v1
        if: failure()
        with:
          name: Unit-Test-Results
          path: "services/template-management-app/template-manager-backend/**/surefire-reports/*.xml"
          reporter: java-junit
          fail-on-error: true
  # Sonar:
  #   needs: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  #         token: ${{ secrets.ACCESS_TOKEN }}
  #         fetch-depth: 0
  #     - uses: ./.github/workflows/actions
  #     - name: Analyze with sonar cloud
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       run: |
  #         mvn clean install -f parent-pom &&
  #         mvn clean install -Ddockerfile.skip=true -DskipTests -f base-platform &&
  #         mvn clean install -Ddockerfile.skip=true -DskipTests -Dsonar.qualitygate.wait=true -Dsonar.projectKey=hvantran_template-management-app sonar:sonar -f services/template-management-app
  Deploy:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/workflows/actions
      - name: Run maven package
        run: |
          mvn clean install -f parent-pom && 
          mvn clean install -Ddockerfile.skip=true -DskipTests -P prod -f base-platform &&
          mvn clean install -Ddockerfile.skip=true -DskipTests -P prod -f services/template-management-app/template-manager-backend
      - uses: actions/upload-artifact@v4
        with:
          name: template-manager-backend
          path: services/template-management-app/template-manager-backend/**/*.jar
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set VERSION environment variable
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Build and push
        run: |
          mvn clean install -Ddockerfile.skip=true -DskipTests -P native -f services/template-management-app/template-manager-backend spring-boot:build-image
          docker tag template-manager-backend:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/template-manager-backend:latest
          docker tag template-manager-backend:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/template-manager-backend:1.0.${{github.run_number}}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/template-manager-backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/template-manager-backend:1.0.${{github.run_number}}
