name: ecommerce-stats-app service ci

env:
  CI: false

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/actions/action.yaml"
      - ".github/workflows/ecommerce-stats-app-ci.yaml"
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/actions/action.yaml"
      - ".github/workflows/ecommerce-stats-app-ci.yaml"
      
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/workflows/actions
      - name: Run maven build
        run: |
          mvn clean install -f parent-pom &&
          mvn clean -f base-platform dependency:tree &&
          mvn clean install -Ddockerfile.skip=true -DskipTests -P prod -f base-platform &&
          mvn clean -f services/ecommerce-stats-app dependency:tree &&
          mvn clean install -Ddockerfile.skip=true -DskipTests -P prod -f services/ecommerce-stats-app

  Test:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/workflows/actions
      - name: Run maven test
        run: |
          mvn clean install -f parent-pom && 
          mvn clean install -Ddockerfile.skip=true -DskipTests -P prod -f base-platform &&
          mvn clean install -Dmaven.test.failure.ignore=true -P test -f services/ecommerce-stats-app
      - name: Unit test results
        uses: dorny/test-reporter@v1
        if: failure()
        with:
          name: Unit-Test-Results
          path: "services/ecommerce-stats-app/**/surefire-reports/*.xml"
          reporter: java-junit
          fail-on-error: true
  Sonar:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/workflows/actions
      - name: Analyze with sonar cloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean install -f parent-pom &&
          mvn clean install -Ddockerfile.skip=true -DskipTests -f base-platform &&
          mvn clean install -Ddockerfile.skip=true -DskipTests -Dsonar.qualitygate.wait=true -Dsonar.projectKey=hvantran_ecommerce-stats-app sonar:sonar -f services/ecommerce-stats-app
  Deploy:
    needs: Sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/workflows/actions
      - name: Run maven package
        run: |
          mvn clean install -f parent-pom && 
          mvn clean install -Ddockerfile.skip=true -DskipTests -P prod -f base-platform &&
          mvn clean install -Ddockerfile.skip=true -DskipTests -P prod -f services/ecommerce-stats-app
      - uses: actions/upload-artifact@v4
        with:
          name: ecommerce-stats-app
          path: services/ecommerce-stats-app/**/*.jar
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set VERSION environment variable
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Build and push
        run: |
          mvn clean install -Ddockerfile.skip=true -DskipTests -P native -f services/ecommerce-stats-app spring-boot:build-image
          docker tag e-commerce-stats:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/ecommerce-stats-app:latest
          docker tag e-commerce-stats:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/ecommerce-stats-app:1.0.${{github.run_number}}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/ecommerce-stats-app:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/ecommerce-stats-app:1.0.${{github.run_number}}
